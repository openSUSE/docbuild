name: CI/Test

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'tests/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  packages: read

jobs:
  test-ubuntu:
    name: ubuntu-latest
    runs-on: ubuntu-latest
    container:
      image: registry.opensuse.org/documentation/containers/15.6/opensuse-daps-toolchain:latest
      # image: ghcr.io/opensuse/docbuild/daps:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get dependencies
        run: |
          rpm -q daps \
            suse-xsl-stylesheets \
            suse-xsl-stylesheets-sbp \
            geekodoc \
            docbook-xsl-stylesheets \
            docbook-xsl-ns \
            xmlgraphics-fop \
            git \
            ditaa \
            libreoffice-draw \
            novdoc \
            ruby2.5-rubygem-asciidoctor \
            curl \
            tar \
            w3m \
            jq \
            rsvg-convert \
            openssh-clients || true

      - name: Install the latest version of uv
        id: setup-uv
        uses: astral-sh/setup-uv@v6
        with:
            version: "latest"
            enable-cache: true
            cache-suffix: "docbuild"

      - name: Print the installed version
        run: |
          # Use uv to get version info
          uv --version

      - name: Install dependencies
        run: uv pip sync --frozen --group devel

      - name: Run tests
        run: |
           uv run --frozen pytest -vv

  test-macos:
    name: macos-latest
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      
      - name: Create venv and install dependencies
        run: |
          pip install uv
          uv pip install --no-deps -e . --dev
          
      - name: Install external tools (macOS)
        run: |
          brew install libxml2 libxslt openjdk
          
          JING_VERSION="20091111"
          JING_URL="https://repo1.maven.org/maven2/com/thaiopensource/jing/20091111/jing-20091111.jar"
          
          curl -sL -f $JING_URL -o jing.jar
          
          if [ ! -f jing.jar ]; then
              echo "Error: Failed to download jing.jar"
              exit 1
          fi

          echo '#!/bin/bash' > jing
          echo 'java -jar jing.jar "$@"' >> jing
          chmod +x jing
          
          echo "$(pwd)" >> $GITHUB_PATH
          echo "/opt/homebrew/opt/openjdk/bin" >> $GITHUB_PATH
          echo "/opt/homebrew/opt/libxml2/bin" >> $GITHUB_PATH
          echo "/opt/homebrew/opt/libxslt/bin" >> $GITHUB_PATH

      - name: Run tests
        run: |
          source .venv/bin/activate
          pytest -vv
