# Target version of Python, sync it with pyproject.toml
target-version = "py312"

# Max line length (matches Black's default)
line-length = 88

# Exclude a variety of commonly ignored directories.
exclude = [
    ".direnv",
    ".eggs",
    ".git",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "build",
    "contrib",
    "dist",
    "site-packages",
    "venv",
]


[lint]
# Enable commonly useful rule sets
select = [
    "F",    # pyflakes
    "E",    # pycodestyle (errors)
    "W",    # pycodestyle (warnings)
    "I",    # isort
    "N",    # pep8-naming
    "UP",   # pyupgrade
    "D",    # pydocstyle
    "ANN",  # flake8-annotations
    "C90",  # mccabe complexity
    "B",    # flake8-bugbear
    "A",    # flake8-builtins
    "COM",  # flake8-commas
    "RUF",  # Ruff-specific rules
]

# Exclude some rules (customize as needed)
ignore = [
    "D104",    # Missing docstring in public package
    "D107",    # Missing docstring in __init__
    "D203",    # Conflicts with D211 (one blank line before class docstring)
    "D213",    # Conflicts with D212 (multi-line docstring start convention)
    # "D401",    # First line of docstring should be in imperative mood
]

# Allow autofix for everything except complexity and annotations
fixable = ["ALL"]
unfixable = ["C90", "ANN"]


# Customize isort behavior (import sorting)
[lint.isort]
known-first-party = ["docbuild"]  # Replace with your module name
combine-as-imports = true
force-sort-within-sections = true


# Limit cyclomatic complexity
[lint.mccabe]
max-complexity = 10


[format]
# 5. Use single quotes in `ruff format`.
quote-style = "single"


[lint.per-file-ignores]
"src/docbuild/cli/build.py" = [
    "D301"  # Use `r"""` if any backslashes in a docstring
]
"tests/**/test_*.py" = [
    "ANN001", # Missing type annotation for function argument
    "ANN002", # Missing type annotation for variable
    "ANN003", # Missing type annotation for class attribute
    "ANN201", # Missing return type annotation
    "ANN202", # Missing return type annotation for private function
    "ANN204", # Missing return type annotation for special method `__init__`
    "D100",   # Missing docstring in public module
    "D101",   # Missing docstring in public class
    "D103",   # Missing docstring in public function
    "D105",   # Missing docstring in magic method
]